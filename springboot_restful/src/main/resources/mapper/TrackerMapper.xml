<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.spring.springboot.dao.TrackerMapper">
  <resultMap id="BaseResultMap" type="org.spring.springboot.model.Tracker">
    <!--@mbg.generated-->
    <!--@Table tracker-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name_id" jdbcType="INTEGER" property="nameId" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, name_id, city, `time`, `location`, content, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from tracker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from tracker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.spring.springboot.model.Tracker">
    <!--@mbg.generated-->
    insert into tracker (id, name_id, city, 
      `time`, `location`, content, 
      description)
    values (#{id,jdbcType=INTEGER}, #{nameId,jdbcType=INTEGER}, #{city,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.spring.springboot.model.Tracker">
    <!--@mbg.generated-->
    insert into tracker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nameId != null">
        name_id,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="time != null">
        `time`,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nameId != null">
        #{nameId,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.spring.springboot.model.Tracker">
    <!--@mbg.generated-->
    update tracker
    <set>
      <if test="nameId != null">
        name_id = #{nameId,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.spring.springboot.model.Tracker">
    <!--@mbg.generated-->
    update tracker
    set name_id = #{nameId,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      `time` = #{time,jdbcType=TIMESTAMP},
      `location` = #{location,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>